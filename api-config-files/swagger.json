{
  "basePath": "https://beta.openphacts.org/1.3/",
  "apiVersion": "v1.3",
  "apis": [
    {
      "path": "/compound/classificationsForTargets" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Classifications for interacting Targets" ,
          "description":  "The classes targets that interact with the given compound URI have been classified with. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology. <hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI.  e.g.: http://ops.rsc-us.org/OPS6958" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/classifications" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Classifications" ,
          "description":  "The classes the given compound URI has been classified with. Currently supported hierarchies are the ChEBI Ontology and the Gene Ontology. <hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI.  e.g.: http://ops.rsc-us.org/OPS6958" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chebi', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Information" ,
          "description":  "Returns information about a single compound that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?ocrs_uri </span>.<br> ?ocrs_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchiKey </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:logp ?alogp </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hba ?hba </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:hbd ?hbd </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:psa ?psa</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc-us.org&gt; </span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?chembl_uri </span>. <br> ?chembl_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?molformula </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode2 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode3 ?mw_freebase </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode4 ?rtb </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt;</span>.<br> ?ops_item <span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?db_uri </span>.<br> ?db_uri  <span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:biotransformation ?biotransformation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:description ?description </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:proteinBinding ?proteinBinding </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:toxicity ?toxicity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:meltingPoint ?meltingPoint </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt;</span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/members/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count members of Compound Class" ,
          "description":  "The number of targets classified with the given class in the supported hierarchies. Currently the only supported hierarchy is the ChEBI Ontology.<hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/members/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Members of Compound Class" ,
          "description":  "A list of targets classified with the given class in the supported hierarchies. Currently the only supported hierarchy is the ChEBI Ontology.<hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?child_node",
                  "DESC(?child_node)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?item",
                  "DESC(?item)",
                  "?ops_item",
                  "DESC(?ops_item)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given compound<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:compoundPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given compound<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?chembl_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?standard_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?standard_relation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?standard_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?standard_unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTarget ?target_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:assayOrganismName ?assay_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:hasDescription ?assay_description  </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> ?target_uri <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:title ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:targetOrganismName ?target_organism </span>. <br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> ?chembl_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?ocrs_uri </span>;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?bNode1 ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span>.<br> ?ocrs_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchiKey</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc-us.org&gt; </span>.<br> ?db_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> drugbank:drugType ?drugType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:genericName ?drug_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt; </span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/38932552-111f-4a4e-a46a-4ed1d7bdf9d5" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal assay organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?bNode1",
                  "DESC(?bNode1)",
                  "?chembl_uri",
                  "DESC(?chembl_uri)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?db_uri",
                  "DESC(?db_uri)",
                  "?doc_uri",
                  "DESC(?doc_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?drugType",
                  "DESC(?drugType)",
                  "?drugType_uri",
                  "DESC(?drugType_uri)",
                  "?drug_name",
                  "DESC(?drug_name)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ocrs_uri",
                  "DESC(?ocrs_uri)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?standard_relation",
                  "DESC(?standard_relation)",
                  "?standard_type",
                  "DESC(?standard_type)",
                  "?standard_unit",
                  "DESC(?standard_unit)",
                  "?standard_value",
                  "DESC(?standard_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/tree/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Pharmacology Count" ,
          "description":  "The total number of activity values in the LDC for a given Compound class. Currently only the ChEBI Ontology is supported. <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:compoundPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/compound/tree/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Compound Class Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values for a given Compound class. Currently only the ChEBI Ontology is supported.<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\">chembl:hasMolecule ?compound_chembl</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:standardType ?std_type</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:standardRelation ?relation</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:standardValue ?std_value</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:standardUnits ?std_unit</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:publishedType ?published_type</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:publishedRelation ?published_relation</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:publishedValue ?published_value</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:publishedUnits ?published_unit</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:hasQUDT ?qudt_uri</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">chembl:hasAssay ?assay_uri</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:pChembl ?pChembl</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\">chembl:hasDocument ?doi</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\">bibo:pmid ?pmid</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt;</span> .<br> ?assay_uri <span style=\"BACKGROUND-COLOR: #33CC99\">chembl:hasTarget ?target_uri</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:assayOrganismName ?assay_organism</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">dcterms:description ?assay_description</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt;</span> .<br> ?target_uri <span style=\"BACKGROUND-COLOR: #66FFCC\">dcterms:title ?target_name</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">chembl:targetOrganismName ?target_organism</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt;</span> .<br> ?compound_chembl <span style=\"BACKGROUND-COLOR: #66FFCC\">skos:exactMatch ?compound_cw</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">skos:exactMatch ?compound_ocrs</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\">skos:exactMatch ?class</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">?full_mwt ?molweight</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt;</span> .<br> ?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\">skos:prefLabel ?compound_name</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://www.conceptwiki.org&gt;</span> .<br> ?compound_ocrs <span style=\"BACKGROUND-COLOR: #66FFCC\">ops:smiles ?smiles</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">ops:inchi ?inchi</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">ops:inchikey ?inchiKey</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\">ops:ro5_violations ?num_ro5_violations</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">void:inDataset &lt;http://ops.rsc-us.org&gt;</span> .<br> ", 
          "group": "Compound" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A ChEBI Class URI. e.g.: http://purl.obolibrary.org/obo/CHEBI_24431" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?class",
                  "DESC(?class)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?document",
                  "DESC(?document)",
                  "?doi",
                  "DESC(?doi)",
                  "?full_mwt",
                  "DESC(?full_mwt)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchiKey",
                  "DESC(?inchiKey)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?relation",
                  "DESC(?relation)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/sources" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Data Sources" ,
          "description":  "(UNDER DEVELOPMENT) Returns information about currently loaded data sources.<hr>",
          "group": "Data Sources" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byCompound/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count Pathways by Compound" ,
          "description":  "Returns the number of pathways which have as part the Metabolite that corresponds to  {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/83931753-9e3f-4e90-b104-e3bcd0b4d833" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byCompound" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways by Compound" ,
          "description":  "Returns a list of pathways which have as part the Metabolite that corresponds to  {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span>.<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span>.<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:Metabolite </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?prefLabel </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A compound URI. e.g.: http://www.conceptwiki.org/concept/83931753-9e3f-4e90-b104-e3bcd0b4d833" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?metabolite",
                  "DESC(?metabolite)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?prefLabel",
                  "DESC(?prefLabel)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byReference/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count Pathways by Reference" ,
          "description":  "Returns the number of pathways which have as part the Reference that corresponds to  {uri}.<br>                 <hr>Response template: <hr><br> &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A reference URI. e.g.: http://identifiers.org/pubmed/9789062" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byReference" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways by Reference" ,
          "description":  "Returns a list of pathways which have as part the Reference that corresponds to  {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span>.<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span>.<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:PublicationReference </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A reference URI. e.g.: http://identifiers.org/pubmed/9789062" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byTarget/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count Pathways by Target" ,
          "description":  "Returns the number of pathways which have as part the Gene Product that corresponds to  {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://identifiers.org/ncbigene/282478" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/byTarget" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathways by Target" ,
          "description":  "Returns a list of pathways which have as part the Gene Product that corresponds to  {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> <span style=\"BACKGROUND-COLOR: #66FFCC\"> ?item dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dcterms:hasPart ?pw_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span>.<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span>.<br> ?pw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> a wp:GeneProduct </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?prefLabel </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://identifiers.org/ncbigene/282478" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?description",
                  "DESC(?description)",
                  "?gene_product",
                  "DESC(?gene_product)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?prefLabel",
                  "DESC(?prefLabel)",
                  "?pw_uri",
                  "DESC(?pw_uri)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathway/getCompounds" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get Compounds for Pathway" ,
          "description":  "Returns the compounds that are part of the pathway that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span>.<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #33CC99\"> dcterms:hasPart ?metabolite </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1002" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathway/getReferences" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get References for Pathway" ,
          "description":  "Returns references that are part of the pathway that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span>.<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #33CC99\"> dcterms:hasPart ?reference </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1015" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathway/getTargets" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get Targets for Pathway" ,
          "description":  "Returns information targets that are part of the pathway that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span>.<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #33CC99\"> dcterms:hasPart ?gene_product </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1008" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathway" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Pathway Information" ,
          "description":  "Returns information about a single pathway that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> sioc:latest_version ?rev </span>.<br> ?rev <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> dcterms:hasPart ?reference </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> dcterms:hasPart ?metabolite </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> dcterms:hasPart ?gene_product </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span>.<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span>.<br> ?reference <span style=\"BACKGROUND-COLOR: #FFFFCC\"> a wp:PublicationReference </span>.<br> ?metabolite <span style=\"BACKGROUND-COLOR: #FFFFCC\"> a wp:Metabolite </span>.<br> ?gene_product <span style=\"BACKGROUND-COLOR: #FFFFCC\"> a wp:GeneProduct </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A Pathway URI. e.g.: http://identifiers.org/wikipathways/WP1019" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count Pathways" ,
          "description":  "Returns the number of pathways in the cache.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "List Pathways" ,
          "description":  "Returns the list of pathways in the cache.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:title ?title </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> wp:organism ?organism_uri </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> foaf:page ?page </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> dc:identifier ?identifier </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFCC99\"> wp:pathwayOntology ?ontology </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.wikipathways.org&gt; </span>.<br> ?organism_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?organism </span><br><br><hr>",
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "pathway_organism" ,
              "description":  "The rdfs:label for the pathway organism (URL encode)." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?description",
                  "DESC(?description)",
                  "?identifier",
                  "DESC(?identifier)",
                  "?item",
                  "DESC(?item)",
                  "?ontology",
                  "DESC(?ontology)",
                  "?organism",
                  "DESC(?organism)",
                  "?organism_uri",
                  "DESC(?organism_uri)",
                  "?page",
                  "DESC(?page)",
                  "?title",
                  "DESC(?title)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pathways/organisms" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Organisms used in Pathways" ,
          "description":  "A list of organism URIs and labels for which pathway data is available.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.wikipathways.org&gt; <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:pathway_organism ?item .<br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?label ;<br> <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:pathway_count ?count ", 
          "group": "Pathway" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?label",
                  "DESC(?label)",
                  "?pathway",
                  "DESC(?pathway)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/units" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity units" ,
          "description":  "A list of activity units which have been normalised<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:normalised_activity_type ?act_type </span>.<br> ?act_type <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label </span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_label",
                  "DESC(?act_label)",
                  "?act_type",
                  "DESC(?act_type)",
                  "?activity",
                  "DESC(?activity)",
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?qudt_label",
                  "DESC(?qudt_label)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/activities/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count activity types" ,
          "description":  "The number of activity types which have been normalised<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:activity_type_count ?count </span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units for allowed values. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/activities" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Activity types" ,
          "description":  "A list of activity types which have been normalised<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:normalised_activity_type ?act_type </span>.<br> ?act_type <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\">ops:activity_count ?count </span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?act_label",
                  "DESC(?act_label)",
                  "?act_type",
                  "DESC(?act_type)",
                  "?activity",
                  "DESC(?activity)",
                  "?count",
                  "DESC(?count)",
                  "?item",
                  "DESC(?item)",
                  "?standard_type",
                  "DESC(?standard_type)",
                  "?type_label",
                  "DESC(?type_label)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/count_units" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Number of activity units" ,
          "description":  "A list of activity units which have been normalised<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> &lt;http://www.ebi.ac.uk/chembl&gt; <span style=\"BACKGROUND-COLOR: #33CC99\"> ops:normalised_activity_unit_count ?count </span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/pharmacology/filters/units/" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Units for activity type" ,
          "description":  "A list of units that activities of the specified type have been normalised to.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?act_type <span style=\"BACKGROUND-COLOR: #33CC99\"> qudt:unit ?unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> rdfs:label ?act_label </span>. <br> ?unit <span style=\"BACKGROUND-COLOR: #FFFFCC\"> rdfs:label ?unit_label </span><br><br><hr>",
          "group": "Pharmacology Filters" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "act_type" ,
              "description":  "http://www.openphacts.org/terms/chembl#{act_name}" ,
              "required": true,
              "paramType": "path",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/classificationsForCompounds" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Classifications for interacting Compounds" ,
          "description":  "The classes Compounds that interact with the given target URI have been classified with. Currently only the ChEBI Ontology is supported. <hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI.  e.g.: http://purl.uniprot.org/uniprot/P00918" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently the only allowed value is 'chebi'." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/classifications" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Classifications" ,
          "description":  "The classes the given target URI has been classified with. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology. <hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI.  e.g.: http://purl.uniprot.org/uniprot/P14756" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "tree" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Information" ,
          "description":  "Returns information about a single target that corresponds to {uri}.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?cw_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?uniprot_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?chembl_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:exactMatch ?db_uri </span>.<br> ?cw_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org&gt; </span>.<br> ?uniprot_uri <span style=\"BACKGROUND-COLOR: #66FFCC\"> uniprot:existence ?existence </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:organism ?organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:sequence ?sequence </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:Function_Annotation ?function </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> uniprot:classifiedWith ?class </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> uniprot:alternativeName ?alt_name </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> uniprot:mass ?mass </span>;<br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:molecularWeight ?mass </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:seeAlso ?target_pdb </span>;<br>         <span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://purl.uniprot.org&gt; </span>.<br> ?chembl_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasTargetComponent ?targetComponent </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdf:type ?target_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> rdfs:label ?synonym </span>;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> ?targetComponent <span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?description </span>;<br> ?db_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> drugbank:cellularLocation ?cellularLocation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:numberOfResidues ?numberOfResidues </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> drugbank:theoreticalPi ?theoreticalPi </span>; <br>         <span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset &lt;http://linkedlifedata.com/resource/drugbank&gt;</span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/members/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Count members for Target class" ,
          "description":  "The number of targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism_uri" ,
              "description":  "An organism URI from Uniprot. e.g. http://purl.uniprot.org/taxonomy/386043" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/members/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Members of Target Class" ,
          "description":  "A list of targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism_uri" ,
              "description":  "An organism URI from Uniprot. e.g. http://purl.uniprot.org/taxonomy/386043" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?chembl_name",
                  "DESC(?chembl_name)",
                  "?chembl_organism",
                  "DESC(?chembl_organism)",
                  "?chembl_type",
                  "DESC(?chembl_type)",
                  "?child_node",
                  "DESC(?child_node)",
                  "?dataset",
                  "DESC(?dataset)",
                  "?g",
                  "DESC(?g)",
                  "?g_short",
                  "DESC(?g_short)",
                  "?goa_name",
                  "DESC(?goa_name)",
                  "?item",
                  "DESC(?item)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?uniprot_name",
                  "DESC(?uniprot_name)",
                  "?uniprot_organism",
                  "DESC(?uniprot_organism)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology Count" ,
          "description":  "The total number of acitivity values in the LDC for a given target<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?ops_item <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:targetPharmacologyTotalResults ?count </span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal assay organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for a given target<br> &nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?item <span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasMolecule ?compound_chembl</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedType ?published_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedRelation ?published_relation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedValue ?published_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:publishedUnits ?published_unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardType ?std_type </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardRelation ?relation </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardValue ?std_value </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:standardUnits ?std_unit </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:hasQUDT ?qudt_uri</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasAssay ?assay_uri </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> chembl:pChembl ?pChembl </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> bibo:pmid ?pmid </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:hasDocument ?doi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;?assay_uri <span style=\"BACKGROUND-COLOR: #FFCC99\"> chembl:assayOrganismName ?assay_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> chembl:hasTarget ?target_uri </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> dcterms:description ?assay_description </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;?target_uri <span style=\"BACKGROUND-COLOR: #33CC99\"> dcterms:title ?target_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> chembl:targetOrganismName ?target_organism </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.ebi.ac.uk/chembl&gt; </span>. <br> &nbsp;&nbsp;&nbsp;&nbsp;?compound_chembl <span style=\"BACKGROUND-COLOR: #FFFFCC\"> ?full_mwt ?molweight </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_ocrs </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:exactMatch ?compound_cw </span>. <br> &nbsp;&nbsp;&nbsp;&nbsp;?compound_ocrs <span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:smiles ?smiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchi ?inchi </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops:inchikey ?inchi_key</span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops:ro5_violations ?num_ro5_violations </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://ops.rsc-us.org&gt; </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;?compound_cw <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?compound_name </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> void:inDataset &lt;http://www.conceptwiki.org/&gt; </span><br><br><hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A target URI. e.g.: http://www.conceptwiki.org/concept/00059958-a045-4581-9dc5-e5a08bb0c291" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?chembl_target_uri",
                  "DESC(?chembl_target_uri)",
                  "?chembl_uri",
                  "DESC(?chembl_uri)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?cw_uri",
                  "DESC(?cw_uri)",
                  "?doc_uri",
                  "DESC(?doc_uri)",
                  "?doi",
                  "DESC(?doi)",
                  "?full_mwt",
                  "DESC(?full_mwt)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?relation",
                  "DESC(?relation)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?standard_relation",
                  "DESC(?standard_relation)",
                  "?standard_type",
                  "DESC(?standard_type)",
                  "?standard_unit",
                  "DESC(?standard_unit)",
                  "?standard_value",
                  "DESC(?standard_value)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_name_chembl",
                  "DESC(?target_name_chembl)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?target_uri",
                  "DESC(?target_uri)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/tree/pharmacology/count" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Pharmacology Count" ,
          "description":  "The total number of  acitivity values in the LDC for targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/target/tree/pharmacology/pages" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Target Class Pharmacology Paginated" ,
          "description":  "A page of items corresponding to acitivity values in the LDC for targets classified with the given class in the supported hierarchies. Currently supported hierarchies are the Enzyme Classification, the ChEMBL Target Tree and the Gene Ontology.<hr>",
          "group": "Target" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "target_organism" ,
              "description":  "A literal target organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_type" ,
              "description":  "One of the activity types listed at /pharmacology/filters/activities" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "activity_value" ,
              "description":  "Return activity values equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-activity_value" ,
              "description":  "Return activity values greater than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-activity_value" ,
              "description":  "Return activity values greater than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-activity_value" ,
              "description":  "Return activity values less than or equal to this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-activity_value" ,
              "description":  "Return activity values less than this number." ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "activity_unit" ,
              "description":  "The unit in which {activity_value} is given. See /pharmacology/filters/units/{activity_type} for allowed valued. For e.g. IC50: /pharmacology/filters/units/IC50" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "relation" ,
              "description":  ">, >=,= , < , <=" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "assay_organism" ,
              "description":  "A literal organism in ChEMBL." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "min-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "minEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "max-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name":  "maxEx-pChembl" ,
              "description":  "The pChembl value of an activity" ,
              "dataType": "double",
              "paramType": "query"
            },
            {
              "name": "_page",
              "description": "A number; the page that should be viewed",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_pageSize",
              "description": "The desired page size. Set to all to retrieve all results in a single page.",
              "dataType": "integer",
              "paramType": "query"
            },
            {
              "name": "_orderBy",
              "description": "The desired variable to sort by. Multiple values can be specified seperated by spaces. Direction of sort can be specified with ASC(?var) and DESC(?var). Default is ascending",
              "allowableValues": {
                "values": [
                  "?assay_description",
                  "DESC(?assay_description)",
                  "?assay_organism",
                  "DESC(?assay_organism)",
                  "?assay_uri",
                  "DESC(?assay_uri)",
                  "?class",
                  "DESC(?class)",
                  "?compound_chembl",
                  "DESC(?compound_chembl)",
                  "?compound_cw",
                  "DESC(?compound_cw)",
                  "?compound_name",
                  "DESC(?compound_name)",
                  "?compound_ocrs",
                  "DESC(?compound_ocrs)",
                  "?document",
                  "DESC(?document)",
                  "?doi",
                  "DESC(?doi)",
                  "?full_mwt",
                  "DESC(?full_mwt)",
                  "?g",
                  "DESC(?g)",
                  "?inchi",
                  "DESC(?inchi)",
                  "?inchi_key",
                  "DESC(?inchi_key)",
                  "?item",
                  "DESC(?item)",
                  "?molweight",
                  "DESC(?molweight)",
                  "?num_ro5_violations",
                  "DESC(?num_ro5_violations)",
                  "?ops_item",
                  "DESC(?ops_item)",
                  "?pChembl",
                  "DESC(?pChembl)",
                  "?pmid",
                  "DESC(?pmid)",
                  "?published_relation",
                  "DESC(?published_relation)",
                  "?published_type",
                  "DESC(?published_type)",
                  "?published_unit",
                  "DESC(?published_unit)",
                  "?published_value",
                  "DESC(?published_value)",
                  "?qudt_uri",
                  "DESC(?qudt_uri)",
                  "?relation",
                  "DESC(?relation)",
                  "?smiles",
                  "DESC(?smiles)",
                  "?std_type",
                  "DESC(?std_type)",
                  "?std_unit",
                  "DESC(?std_unit)",
                  "?std_value",
                  "DESC(?std_value)",
                  "?target_chembl",
                  "DESC(?target_chembl)",
                  "?target_comp_chembl",
                  "DESC(?target_comp_chembl)",
                  "?target_component",
                  "DESC(?target_component)",
                  "?target_name",
                  "DESC(?target_name)",
                  "?target_organism",
                  "DESC(?target_organism)",
                  "?uniprot",
                  "DESC(?uniprot)"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/tree/children" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Child nodes" ,
          "description":  "A representation of all child nodes of the given class in the supportted hierarchies. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<hr>",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/tree/parents" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Parent nodes" ,
          "description":  "A representation of all parent nodes of the given class in the supportted hierarchies. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<hr>",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name":  "uri" ,
              "description":  "A class URI from one of the supported hierarchies. e.g.: http://purl.uniprot.org/enzyme/6.2.-.-" ,
              "dataType": "string",
              "required": true,
              "paramType": "query"
            },
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/tree" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Root nodes" ,
          "description":  "A representation of the root classes in each hierachy. The ChEBI Ontology, the Gene Ontology, the Enzyme Classification, and the ChEMBL Target Tree are currently supported.<hr>",
          "group": "Concept Class Hierarchies" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "root" ,
              "description":  "Restrict results by hierarchy. Currently one of 'chembl', 'chebi', 'enzyme', 'go'" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure/exact" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Exact Search" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?moleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:result ?result </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:MatchType ?searchMatchType </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasPatents ?hasPatents </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CNC(=O)c1cc(ccn1)Oc2ccc(cc2)NC(=O)Nc3ccc(c(c3)C(F)(F)F)Cl" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchType",
              "description":  "0: ExactMatch ; 1: AllTautomers ; 2: SameSkeletonIncludingH ; 3: SameSkeletonExcludingH ; 4: AllIsomers" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "InchiKey to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChIKey string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000399 ?inchi_key </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi_key" ,
              "description":  "An InChIKey string. E.g. BSYNRYMUTXBXSQ-UHFFFAOYSA-N" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Inchi to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input InChI string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000396 ?inchi </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "inchi" ,
              "description":  "An InChI string. E.g. InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure/similarity" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Similarity Search" ,
          "description":  "Returns a set of ChemSpider compound URLs, similar to the input molecule according to the specified algorithm and threshold. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?inputMoleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops_api:result ?similarMolecule </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:Threshold ?searchThreshold </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:SimilarityType ?searchSimilarityType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:Alpha ?searchAlpha </span>; <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:Beta ?searchBeta </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasPatents ?hasPatents </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Start ?start </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Count ?count </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.SimilarityType",
              "description":  "0: Tanimoto ; 1: Tversky ; 2: Euclidian" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Threshold",
              "description":  "Double <= 1.0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Alpha",
              "description":  "Value in [0,1] ; Default=0.5 ; available only for Tversky metric (for the other types it will be ignored) " ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.Beta",
              "description":  "Value in [0,1] ; Default=0.5 ; available only for Tversky metric (for the other types it will be ignored) " ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Start",
              "description":  "Integer. Return results starting the index. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Count",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "SMILES to URL" ,
          "description":  "Returns a ChemSpider URL corresponding to an input SMILES string. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> cheminf:CHEMINF_000018 ?smiles </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "smiles" ,
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/structure/substructure" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Chemical Structure Substructure Search" ,
          "description":  "Returns a set of ChemSpider compound URLs that contain the specified structure. Driven by ChemSpider.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api_search:Molecule ?inputMoleculeSmiles </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops_api:result ?resultMolecule </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api:search:MolType ?searchMolType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_search:MatchTautomers ?searchMatchTautomers </span>; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Complexity ?complexity </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:Isotopic ?isotopic </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasSpectra ?hasSpectra </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_common:HasPatents ?hasPatents </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Start ?start </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api_result:Count ?count </span><br><br><hr>",
          "group": "ChemSpider structure search" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name": "searchOptions.Molecule",
              "description":  "A SMILES string. E.g. CC(=O)Oc1ccccc1C(=O)O" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name": "searchOptions.MatchTautomers",
              "description":  "(Not supported at the moment) Search exactly for the given tautomeric form and ignore others. Not supported at the moment . Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "searchOptions.MolType",
              "description":  "0: SMILES ; 1: SMARTS" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Complexity",
              "description":  "(Not supported at the moment) 0: Any ; 1: Single ; 2: Multi" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.Isotopic",
              "description":  "(Not supported at the moment) 0: Any ; 1: Labeled ; 2: NotLabeled" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasSpectra",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "commonOptions.HasPatents",
              "description":  "(Not supported at the moment) Boolean" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Start",
              "description":  "Integer. Return results starting from this index value. Default value: 0" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "resultOptions.Count",
              "description":  "Integer. How many results should be returned starting from Start index. Default value: -1." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/getConceptDescription" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Get concept description" ,
          "description":  "Get the description of a concept, based on a concept URL. Driven by ConceptWiki.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?conceptURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops_api:semanticTag ?tagBNode </span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> skos:definition ?definitionText </span>.<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel </span>;<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> void:inDataset ?sourceURL </span>;<br> ?sourceURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?sourcePrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span><br><br><hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the concept; required. E.g. 8e3a87ae-345d-4c25-bd7a-5b3221c6e3fa" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = ConceptWiki" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/byTag" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map free text to a concept URL based on semantic tag" ,
          "description":  "Search for a set of concept URLs based on free text and an input tag, which specifies the semantic type. Driven by ConceptWiki.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:searchTerm ?searchTerm</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:tagUUID ?inputTagUUID</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops_api:result ?uuidURL</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api:limit ?resultsLimit</span> .<br> ?uuidURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:match ?match</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops_api:semanticTag ?tagBNode</span> ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel</span> ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode</span> .<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel</span> .<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url</span> ;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType</span><br><br><hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Minimum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "uuid" ,
              "description":  "UUID of the tag concept; required. Specifies the 'semantic type' required for the search results. E.g. 07a84994-e464-4bbf-812a-a4b96fa3d197i for 'Chemical Viewed Structurally', or eeaec894-d856-4106-9fa1-662b1dc6c6f1 for 'Amino Acid, Peptide, or Protein'" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = ConceptWiki" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/search/freetext" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map free text to a concept URL" ,
          "description":  "Returns a set of concept URLs associated to the input free text. Driven by ConceptWiki.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #66FFCC\"> rdf:type ?searchType </span>;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:searchTerm ?searchTerm </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #33CC99\"> ops_api:result ?uuidURL </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> ops_api:limit ?resultsLimit </span>.<br> ?uuidURL <span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?conceptPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> ops_api:match ?match </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?conceptAltLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> ops_api:semanticTag ?tagBNode </span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:exactMatch ?urlBNode </span>.<br> ?tagBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:uuid tagUUID </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> skos:prefLabel ?tagPrefLabel </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFFFCC\"> cw:deleted ?deletedFromWikiMarker </span>.<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #FFCC99\"> skos:altLabel ?tagAltLabel </span>;<br> ?urlBNode <span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:url ?url </span>;<br> &nbsp;&nbsp;&nbsp;&nbsp;<span style=\"BACKGROUND-COLOR: #66FFCC\"> cw:matchType ?matchType </span><br><br><hr>",
          "group": "Concept Wiki services" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "q" ,
              "description":  "Query; required. Mininum length is 3 characters. E.g. water" ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "limit" ,
              "description":  "Limits the number of results; optional. Minimum value is 1, maximum value is common sense. Default value is 10." ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name":  "branch" ,
              "description":  "The search results will be filtered by this source authority; optional. Possible values: 1 = Community, 2 = UMLS, 3 = SwissProt, 4 = ChemSpider, 5 = ConceptWiki" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
    {
      "path": "/mapURL" ,
      "operations": [
        {
          "httpMethod": "GET",
          "summary":  "Map URL" ,
          "description":  "Returns a set of URLs associated to the input URL.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<hr>Response template: <hr><br> ?primaryTopic <span style=\"BACKGROUND-COLOR: #33CC99\"> skos:exactMatch ?url </span><br><br><hr>",
          "group": "Mapping service betweem URLs" ,
          "parameters": [
            {
              "name": "app_id",
              "description": "Your access application id",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_ids"
            },
            {
              "name": "app_key",
              "description": "Your access application key",
              "dataType": "string",
              "paramType": "query",
              "threescale_name": "app_keys"
            },
            {
              "name":  "URL" ,
              "description":  "An input URL to be mapped." ,
              "paramType": "query",
              "required": true,
              "dataType": "string"
            },
            {
              "name":  "targetURISpace" ,
              "description":  "List of URI spaces separated by '|' characters. Restricts the results to targets in this/these URISpace(s). The URI space of a URL is the one defined when the mapping is loaded. E.g. http://www.conceptwiki.org/concept/" ,
              "paramType": "query",
              "dataType": "string"
            },
            {
              "name": "_format",
              "description": "The desired result format.",
              "allowableValues": {
                "values": [
                  "json",
                  "tsv",
                  "ttl",
                  "xml",
                  "rdf",
                  "rdfjson",
                  "html"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            },
            {
              "name": "_callback",
              "description": "For JSONP",
              "dataType": "string",
              "paramType": "query"
            },
            {
              "name": "_metadata",
              "description": "Additional metadata to be included with response.",
              "allowableValues": {
                "values": [
                  "execution",
                  "site",
                  "formats",
                  "views",
                  "all"
                ],
                "valueType": "LIST"
              },
              "dataType": "string",
              "required": false,
              "paramType": "query"
            }
          ]
        }
      ]
    },
  ]
}
